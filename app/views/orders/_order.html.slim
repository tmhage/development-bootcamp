h3 Tickets & Price

- if @order.cart[:community].present?
  .input
    => @order.cart[:community]
    strong Community
    |  tickets (#{number_to_currency(@order.ticket_prices[:community])})
- if @order.cart[:normal].present?
  .input
    => @order.cart[:normal]
    strong Normal
    |  tickets (#{number_to_currency(@order.ticket_prices[:normal])})
- if @order.cart[:supporter].present?
  .input
    => @order.cart[:supporter]
    strong Supporter
    |  tickets (#{number_to_currency(@order.ticket_prices[:supporter])})
- if @order.discount_code.present?
  .input
    strong = t('.total_discount_promo', promo: @order.discount_code.code)
    =< number_to_currency(@order.cart_discount)
.input
  strong = t('.total_price')
  =< number_to_currency(@order.cart_sum_total)

p
  br

- if @order.confirmed?
  - if @order.mollie_status.blank? && @order.stripe_token.blank?
    p = payment_link_to t('.pay_now'), order, class: 'button primary'

    p
      = t('.prefer_creditcard', total: number_to_currency(@order.cart_sum_total), payment_fee: number_to_currency(@order.creditcard_fee), creditcard_total: number_to_currency(@order.creditcard_total / 100.0))

      = form_for @order, url: stripe_token_enroll_url(@order) do |f|
        script src="https://checkout.stripe.com/checkout.js" class="stripe-button" data-key="#{ENV['DB_STRIPE_PKEY']}" data-amount="#{(@order.cart_sum_total * 102.9).to_i}" data-name="Development Bootcamp Tickets" data-description="#{@order.identifier}" data-image="/devbootcamp.png" data-email="#{@order.billing_email}" data-customer="#{@order.identifier}" data-currency="eur"

    p
      br

    = tmd('.payment_information')

  - elsif @order.payment
    h4 = "Status: #{@order.payment.status.upcase}"

    - if %w(CANCELLED EXPIRED).include? @order.payment.status.upcase
      p = t('.your_order_was_cancelled_expired', status: t(@order.payment.status.upcase))

    p = payment_link_to t('.pay_now'), order, class: 'button primary'

    p = t('.prefer_creditcard', total: number_to_currency(@order.cart_sum_total), payment_fee: number_to_currency(@order.creditcard_fee), creditcard_total: number_to_currency(@order.creditcard_total / 100.0))

    = form_for @order, url: stripe_token_enroll_url(@order) do |f|
      script src="https://checkout.stripe.com/checkout.js" class="stripe-button" data-key="#{ENV['DB_STRIPE_PKEY']}" data-amount="#{(@order.cart_sum_total * 102.9).to_i}" data-name="Development Bootcamp Tickets" data-description="#{@order.identifier}" data-image="/devbootcamp.png" data-email="#{@order.billing_email}" data-customer="#{@order.identifier}" data-currency="eur"

  - else
    h4 = t('.thank_you_processed')
    p = t('.email_when_processed')

p = t('.below_overview_details')

h3 = t(:billing_details)
.input
  strong = t(:label_full_name)
  =< @order.billing_name

- if @order.billing_company_name.present?
  .input
    strong = t(:label_company_name)
    =< @order.billing_company_name

.input
  strong = t(:label_email)
  =< @order.billing_email

.input
  strong = t(:label_address)
  =< @order.billing_address

.input
  strong = t(:label_postal_code)
  =< @order.billing_postal

.input
  strong = t(:label_city)
  =< @order.billing_city

.input
  strong = t(:label_country)
  =< @order.billing_country

.input
  strong = t(:label_phone)
  =< @order.billing_phone
p
  br

h3 = t('.student_details')

- @order.students.each do |student|
  .input
    strong = t(:label_name)
    =< student.first_name
    =< student.last_name

  .input
    strong = t(:label_email)
    =< student.email

  .input
    strong = t(:label_phone)
    =< student.phone_number

  .input
    strong = t(:label_bring_laptop)
    =< student.owns_laptop? ? t(:form_label_yes) : t(:form_label_no)

  .input
    strong = t(:label_birth_date)
    =< student.birth_date && student.birth_date.to_formatted_s(:long)

  .input
    strong Twitter handle:
    =< student.twitter_handle || t(:label_not_filled)

  .input
    strong Github handle:
    =< student.github_handle || t(:label_not_filled)

  .input
    strong = t(:label_remarks)
    =< student.remarks || t(:label_none)
  p
    br
